#ifndef __CCOS_CONFIG_H__
#define __CCOS_CONFIG_H__
//--------------------------------------------------------------------------------------------------------------------
//用户定义
//任务优先级枚举
enum{
	OS_PI_PR_KEY,
	OS_PI_PR_ADC,
	OS_PI_PR_PWM,
	OS_PI_Task_MAX
	};
//--------------------------------------------------------------------------------------------------------------------
#define OS_TASK_MAX OS_PI_Task_MAX 			//定义最大任务数2-32，为了节约内存与CPU消耗，用到几个任务定义几个
//--------------------------------------------------------------------------------------------------------------------
//#define OSTimeSlices_EN			//时间片任务使能,该功能消耗一定的资源，只在需要的时候开启
#ifdef OSTimeSlices_EN
	#define OS_TASK_TimeSlices OS_PI_Task_Low0	//定义时间片调度的起始任务
#endif
//--------------------------------------------------------------------------------------------------------------------
//用户根据需要可选，关掉不用的功能可以节约代码与内存
#define OSCHK_RunTime_EN		//检测任务有效就绪运行时间
#define OSCHK_RunTimeMax_EN		//检测任务有效就绪运行时间最大值，一般作为测试用
#define OS_ChkLowRdy_EN			//检查是否存在低优先级的任务就绪情况
#define OS_CHK_Event_Max_EN		//检查时间被搁置的最大值
//--------------------------------------------------------------------------------------------------------------------
#define OSTaskIdleHook()		//用户自定义函数，如果有在Idle任务里执行的函数，注意修改OS_TASK_IDLE_STK_SIZE防止堆栈溢出
#define OS_TASK_IDLE_STK_SIZE    16		//后台任务堆栈的最小容量，仅压了16个寄存器，若在Idle任务里面增加函数必须增加容量
//--------------------------------------------------------------------------------------------------------------------
#endif
